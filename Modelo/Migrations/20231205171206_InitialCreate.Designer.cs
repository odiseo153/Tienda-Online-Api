// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tienda_Online_Api.Modelos;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(TiendaOnlineContext))]
    [Migration("20231205171206_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Carritocompra", b =>
                {
                    b.Property<Guid>("Carritoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("carritoid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad");

                    b.Property<Guid>("Productoid")
                        .HasColumnType("uuid")
                        .HasColumnName("productoid");

                    b.Property<Guid>("Usuarioid")
                        .HasColumnType("uuid")
                        .HasColumnName("usuarioid");

                    b.HasKey("Carritoid")
                        .HasName("carritocompras_pkey");

                    b.HasIndex("Productoid");

                    b.HasIndex("Usuarioid");

                    b.ToTable("carritocompras", (string)null);
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Detallespedido", b =>
                {
                    b.Property<Guid>("Detallepedidoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("detallepedidoid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("Pedidoid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Preciounitario")
                        .HasColumnType("numeric");

                    b.Property<Guid>("Productoid")
                        .HasColumnType("uuid");

                    b.HasKey("Detallepedidoid")
                        .HasName("detallespedido_pkey");

                    b.HasIndex("Pedidoid");

                    b.HasIndex("Productoid");

                    b.ToTable("detallespedido", (string)null);
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Historialcambio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Fechadecambio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Motivo")
                        .HasColumnType("text");

                    b.Property<Guid>("Pedidoid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Usuarioid")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("historialcambios_pkey");

                    b.HasIndex("Pedidoid");

                    b.HasIndex("Usuarioid");

                    b.ToTable("historialcambios", (string)null);
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Pedido", b =>
                {
                    b.Property<Guid>("Pedidoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pedidoid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fechapedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fechapedido")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("Usuarioid")
                        .HasColumnType("uuid")
                        .HasColumnName("usuarioid");

                    b.HasKey("Pedidoid")
                        .HasName("pedidos_pkey");

                    b.HasIndex("Usuarioid");

                    b.ToTable("pedidos", (string)null);
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Producto", b =>
                {
                    b.Property<Guid>("Productoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productoid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("precio");

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("stock");

                    b.HasKey("Productoid")
                        .HasName("productos_pkey");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Usuario", b =>
                {
                    b.Property<Guid>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("usuarioid");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Correoelectronico")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("correoelectronico");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Rol")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("rol");

                    b.HasKey("Usuarioid")
                        .HasName("usuarios_pkey");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Carritocompra", b =>
                {
                    b.HasOne("Tienda_Online_Api.Modelos.Producto", "Producto")
                        .WithMany("Carritocompras")
                        .HasForeignKey("Productoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("carritocompras_productoid_fkey");

                    b.HasOne("Tienda_Online_Api.Modelos.Usuario", "Usuario")
                        .WithMany("Carritocompras")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("carritocompras_usuarioid_fkey");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Detallespedido", b =>
                {
                    b.HasOne("Tienda_Online_Api.Modelos.Pedido", "Pedido")
                        .WithMany("Detallespedidos")
                        .HasForeignKey("Pedidoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallespedido_pedidoid_fkey");

                    b.HasOne("Tienda_Online_Api.Modelos.Producto", "Producto")
                        .WithMany("Detallespedidos")
                        .HasForeignKey("Productoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallespedido_productoid_fkey");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Historialcambio", b =>
                {
                    b.HasOne("Tienda_Online_Api.Modelos.Pedido", "Pedido")
                        .WithMany("Historialcambios")
                        .HasForeignKey("Pedidoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historialcambios_pedidoid_fkey");

                    b.HasOne("Tienda_Online_Api.Modelos.Usuario", "Usuario")
                        .WithMany("Historialcambios")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historialcambios_usuarioid_fkey");

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Pedido", b =>
                {
                    b.HasOne("Tienda_Online_Api.Modelos.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("pedidos_usuarioid_fkey");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Pedido", b =>
                {
                    b.Navigation("Detallespedidos");

                    b.Navigation("Historialcambios");
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Producto", b =>
                {
                    b.Navigation("Carritocompras");

                    b.Navigation("Detallespedidos");
                });

            modelBuilder.Entity("Tienda_Online_Api.Modelos.Usuario", b =>
                {
                    b.Navigation("Carritocompras");

                    b.Navigation("Historialcambios");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
